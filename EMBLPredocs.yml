---
- name: EMBL Predocs build playbook on 24-09-2019
  hosts: coursevm
  gather_facts: no
  become: yes
  become_method: sudo
  tasks:
  - name: Install Ubuntu Repo based tools
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
      - openjdk-8-jre
      - openjdk-8-jre-headless
      - libcanberra-gtk3-module
      - libcanberra-gtk-module

# Samtools ################################################

  - name: Download and extract Samtools archives
    unarchive:
      src:  '{{ item }}'
      dest: /usr/local/
      remote_src: yes
      mode: '0777'
    with_items:
      - "https://github.com/samtools/htslib/releases/download/1.9/htslib-1.9.tar.bz2"
      - "https://github.com/samtools/samtools/releases/download/1.9/samtools-1.9.tar.bz2"
      - "https://github.com/samtools/bcftools/releases/download/1.9/bcftools-1.9.tar.bz2"

  - name: Install Samtools dependencies
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
      - zlib1g-dev
      - libbz2-dev
      - libncurses5-dev
      - libncursesw5-dev
      - liblzma-dev
      - gcc
      - make
      - libcurl4-openssl-dev
      - libssl-dev

  - name: Compile Samtools
    shell: |
      ./configure
      make
      make install
    args:
      chdir: "{{ item }}"
    with_items:
      - "/usr/local/htslib-1.9"
      - "/usr/local/samtools-1.9"
      - "/usr/local/bcftools-1.9"

# Picard ################################################

  - name: Download Picard
    get_url:
      url: "https://github.com/broadinstitute/picard/releases/download/2.20.7/picard.jar"
      dest: /usr/local/bin
      mode: '0777'

  - name: Create Picard bash executable
    file:
      path: /usr/local/bin/picard
      state: touch
      mode: '0777'

  - name: Fill in Picard bash executable
    blockinfile:
      path: /usr/local/bin/picard
      block: |
        #!/bin/bash
        java -jar /usr/local/bin/picard.jar $@

# Bowtie2 ################################################

  - name: Download and extract Bowtie2 archive
    unarchive:
      src: "https://netcologne.dl.sourceforge.net/project/bowtie-bio/bowtie2/2.3.5.1/bowtie2-2.3.5.1-linux-x86_64.zip"
      dest: /usr/local/
      remote_src: yes
      mode: '0777'

  - name: Create Symlink for all the tools within Bowtie2
    shell: ln -s /usr/local/bowtie2-2.3.5.1-linux-x86_64/bowtie2* /usr/local/bin/
    ignore_errors: yes

# FastQC ################################################

  - name: Download and extract FastQC archive
    unarchive:
      src: "https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.8.zip"
      dest: /usr/local/
      remote_src: yes
      mode: '0777'

  - name: Creat FastQC Symlink
    file:
      src: /usr/local/FastQC/fastqc
      dest: /usr/local/bin/fastqc
      state: link
    ignore_errors: yes

  - name: Create FastQC Desktop file
    file:
      path: /home/training/Desktop/fastqc.desktop
      state: touch
      owner: training
      group: training
      mode: '0777'

  - name: Fill in FastQC Desktop file
    blockinfile:
      path: /home/training/Desktop/fastqc.desktop
      block: |
        [Desktop Entry]
        Type=Application
        Terminal=false
        Name=FastQC 0.11.8
        Icon=/usr/local/FastQC/fastqc_icon.ico
        Exec=/usr/local/FastQC/fastqc

# Bedtools2 ################################################

  - name: Download and extract Bedtools2 archive
    unarchive:
      src: "https://github.com/arq5x/bedtools2/releases/download/v2.29.0/bedtools-2.29.0.tar.gz"
      dest: /usr/local/
      remote_src: yes
      mode: '0777'

  - name: Compile Bedtools2
    shell: |
      make
      make install
    args:
      chdir: /usr/local/bedtools2

# IGV ################################################

  - name: Download and extract IGV archive
    unarchive:
      src: "https://data.broadinstitute.org/igv/projects/downloads/2.7/IGV_Linux_2.7.2.zip"
      dest: /usr/local/
      remote_src: yes
      mode: '0777'

  - name: Install  with Expect
    shell: |
      sed -i 's/\"$prefix\"/\/usr\/local\/IGV_Linux_2.7.2/g' /usr/local/IGV_Linux_2.7.2/igv.sh
      ln -sf /usr/local/IGV_Linux_2.7.2/igv.sh /usr/local/bin/igv
    ignore_errors: yes

  - name: Create IGV Desktop file
    file:
      path: /home/training/Desktop/igv.desktop
      state: touch
      owner: training
      group: training
      mode: '0777'

  - name: Fill in IGV Desktop file
    blockinfile:
      path: /home/training/Desktop/igv.desktop
      block: |
        [Desktop Entry]
        Type=Application
        Terminal=false
        Name=IGV 2.6.3
        Icon=/usr/local/IGV_Linux_2.7.2/IGV_64.png
        Exec=/usr/local/IGV_Linux_2.7.2/igv.sh

# UCSC Tools ################################################

  - name: Download bedGraphToBigWig into the bin
    get_url:
      url: "http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/bedGraphToBigWig"
      dest: /usr/local/bin/bedGraphToBigWig
      mode: '0777'

  - name: Download bedGraphToBigWig into the bin
    get_url:
      url: "http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/fetchChromSizes"
      dest: /usr/local/bin/fetchChromSizes
      mode: '0777'

# R CRAN & Rstudio ################################################

  - name: add R cran apt repository
    apt_repository: 
      repo: 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/' 
      state: present 
      filename: rcran 
      update_cache: yes

  - name: Install R cran and dependencies
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
      - r-base
      - r-base-core
      - r-recommended

  - name: Change R libs file permissions
    file:
      path: '{{ item }}'
      mode: '0777'
      recurse: yes
    with_items:
      - /usr/share/R
      - /usr/lib/R
      - /usr/local/lib/R

  - name: Install rstudio Deb package
    apt:
      deb: https://download1.rstudio.org/desktop/bionic/amd64/rstudio-1.2.1335-amd64.deb

  - name: Copy Rstudio Desktop file
    copy:
      src: /usr/share/applications/rstudio.desktop
      dest: /home/training/Desktop/rstudio.desktop
      remote_src: yes
      owner: training
      group: training
      mode: '0777'

  - name: Install R cran and dependencies
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
      - libxml2-dev
      - libxml2
      - liblzma-dev
      - curl 
      - libcurl4-openssl-dev

  - name: Create R pkg installer file
    file:
      path: /usr/local/pkg_install.R
      state: touch
      mode: '0777'

  - name: Fill in R pkg installer file
    blockinfile:
      path: /usr/local/pkg_install.R
      block: |
        if (!requireNamespace("BiocManager"))
          install.packages("BiocManager")
        BiocManager::install(update = TRUE, ask = FALSE)
        BiocManager::install(c("readr", "DiffBind"), ask = FALSE)

  - name: Install R pkgs
    shell: Rscript /usr/local/pkg_install.R

# Fastx toolkit ################################################

  - name: Download and extract Fastx toolkit archive
    unarchive:
      src: "http://hannonlab.cshl.edu/fastx_toolkit/fastx_toolkit_0.0.13_binaries_Linux_2.6_amd64.tar.bz2"
      dest: /usr/local/
      remote_src: yes
      mode: '0777'

# MACS2 ################################################

  - name: Install apt dependencies
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
      - python-dev
      - python-pip

  - name: Install python dependencies
    pip:
      name:
        - pip
        - numpy
        - cython
        - scipy
      state: latest

  - name: Install MACS2 dependencies
    pip:
      name: MACS2
      state: latest

# ################################################
